{
    "define": {
        "prefix": "define",
        "body": "define(`${1:macroName}', `${0:[expansion]}')"
    },
    "undefine": {
        "prefix": "undefine",
        "body": "undefine(`${1:macroName}', ${0:...})",
        "description": "For each argument, remove the macro name. The macro names must necessarily be quoted, since they will be expanded otherwise."
    },
    "defn": {
        "prefix": "defn",
        "body": "defn(`${1:macroName}', ${0:...})",
        "description": "Expands to the quoted definition of each name. If an argument is not a defined macro, the expansion for that argument is empty."
    },
    "pushdef": {
        "prefix": "pushdef",
        "body": "pushdef(`${1:macroName}', `${0:[expansion]}')",
        "description": "These macros work in a stack-like fashion. A macro is temporarily redefined with pushdef, which replaces an existing definition of name, while saving the previous definition, before the new one is installed. If there is no previous definition, pushdef behaves exactly like define."
    },
    "popdef": {
        "prefix": "popdef",
        "body": "popdef(`${1:macroName}', ${0:...})",
        "description": "These macros work in a stack-like fashion. A macro is temporarily redefined with pushdef, which replaces an existing definition of name, while saving the previous definition, before the new one is installed. If there is no previous definition, pushdef behaves exactly like define."
    },
    "indir": {
        "prefix": "indir",
        "body": "indir(`${1:macroName}', ${0:args...})",
        "description": "Results in a call to the macro name, which is passed the rest of the arguments args. If name is not defined, an error message is printed, and the expansion is void."
    },
    "builtin": {
        "prefix": "builtin",
        "body": "builtin(`${1:macroName}', ${0:args...})",
        "description": "Results in a call to the builtin name, which is passed the rest of the arguments args. If name does not name a builtin, an error message is printed, and the expansion is void."
    },
    "ifdef": {
        "prefix": "ifdef",
        "body": "ifdef(`${1:macroName}', ${2:expansion1}, ${3:[expansion2]})"
    },
    "comment": {
        "prefix": "ifelse",
        "body": "ifelse(`${1:comment}')"
    },
    "ifelse": {
        "prefix": "ifelse",
        "body": "ifelse(${1:string-1}, ${2:string-2}, ${3:equal}, ${4:[not-equal]})"
    },
    "switch case": {
        "prefix": "ifelse",
        "body": "ifelse(${1:${2:string-1}, ${3:string-2}, ${4:equal-1}}, ${5:${6:string-3}, ${7:string-4}, ${8:equal-2}}, ${9:â€¦}, ${10:[not-equal]})"
    }
}